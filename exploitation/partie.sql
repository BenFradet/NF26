--question 1--
select d.dat, d.trimestre, d.mois, count(*)
from nf26p008.f_dw_ventes v, nf26p008.f_dw_date d
where d.dat = v.dat
group by rollup (d.trimestre, d.mois, d.dat);

--question 2--
select round(avg(ventes)) from (
    select count(*) as nb_ventes
    from nf26p008.f_dw_ventes v, nf26p008.f_dw_produit p
    where p.isbn = v.produit
    group by p.isbn
);

select * from (
    select rank() over(order by count(*) desc) as rank,
        p.isbn as isbn,
        p.titre as titre,
    from nf26p008.f_dw_ventes v, nf26p008.f_dw_produit p
    where p.isbn = v.produit
    group by p.isbn, p.titre
)
where rank <= 100;

create or replace viez nf26p008.f_dw_best_seller as
select isbn, titre, case when rank <= 65 then 1 else 0 end as bs
from (
    select rank() over (order by count(*) desc) as rank,
    count(*) as ventes,
    p.isbn as isbn,
    p.titre as titre
    from nf26p008.f_dw_ventes v, nf26p008.f_dw_produit p
    where p.isbn = v.produit
    group by p.isbn, p.titre
);

--question 3--
@f_dw_best_seller_to_csv.sql

--question 4--
@f_dw_ventes_par_sem_cumulees.sql

--question 5--
select m.dpt, m.num_mag, count(*)
from nf26p008.f_dw_ventes v, nf26p008.f_dw_magasin m
where v.magasin = m.num_mag and m.rayonnage = 'A' and m.rayon_bs = '1'
group by rollup(m.dpt, m.num_mag);

--question 6--
select d.jour_semaine, p.parution, p.auteur, p.editeur, count(*)
from nf26p008.f_dw_ventes v, nf26p008.f_dw_produit p, nf26p008.f_dw_date d
where v.dat = d.dat and p.isbn = v.produit
group by d.jour_semaine, p.parution, p.auteur, p.editeur;
